{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressButton","handlerKeyUp","event","setState","key","document","addEventListener","this","removeEventListener","text","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,YAAa,GAFjB,EAaEC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEH,YAAaE,EAAME,OAdvC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,gBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,gBAV/C,oBAiBE,WACE,IAAQD,EAAgBO,KAAKR,MAArBC,YACFS,EAAQT,EAAD,mCAEmBA,EAFnB,KACT,0BAGJ,OACE,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGD,UA1BX,GAAyBE,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.53dc99bc.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressButton: number | string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    pressButton: 0,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handlerKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handlerKeyUp);\n  }\n\n  handlerKeyUp = (event: KeyboardEvent) => {\n    this.setState({ pressButton: event.key });\n  };\n\n  render() {\n    const { pressButton } = this.state;\n    const text = !pressButton\n      ? 'Nothing was pressed yet'\n      : `The last pressed key is [${pressButton}]`;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {text}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}